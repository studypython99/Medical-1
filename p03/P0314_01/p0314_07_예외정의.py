#   예외처리:       프로그램 실행시 '알 수 없는 오류'로 인한 프로그램 종료를 방지하기 위함
#   프로그램 에러:  프로그램 실행하면서 수정해야함. try 사용해서 넘기지 말자
#   try:    프로그램에서 오류가 발생될것 같은 소스
#   except: 예외 발생시 처리구문
#   except Exception as e:  예외 발생시 어떤 예외가 발생되었는지 확인가능, print(e)
#   else:   예외 발생이 없을 시 처리구문
#   finally:무조건 실행되는 소스
#   raise:  강제로 오류 생성, raise "전달메모"


print("1. 학생성적입력")
print("2. 학생성적출력")
print("3. 학생성적수정")

num = int(input("숫자를 입력하세요 >>"))

if num == 1:
    print("1. 학생성적입력 완성")
if num == 2:
    print("2. 김과장 해야 할 부분")
    raise "김과장에게 받아야 할 부분" # 강제로 예외를 발생시켜서 프로그램을 멈추게 할 수 있다. 알림으로 사용.
if num == 3:
    print("2. 이대리 해야 할 부분")
    pass #  프로그램이 커지면 멈춰서 확인해야 어디서 뭘 해야할지 확인 가능, pass는 그냥 지나감;
    